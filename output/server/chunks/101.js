exports.id=101,exports.ids=[101],exports.modules={12744:(e,t,r)=>{"use strict";r.d(t,{Ay:()=>P,GS:()=>i,Hb:()=>h,Qh:()=>m,R2:()=>o,UV:()=>f,adminAPI:()=>u,apiUtils:()=>d,certificateAPI:()=>l,dg:()=>w,hJ:()=>n,quizAPI:()=>c,rT:()=>p,requestCertificate:()=>b});let s="https://api.mindshiftlearning.id/api",a=async(e,t={})=>{try{let r=localStorage.getItem("authToken"),a={mode:"cors",credentials:"include",headers:{"Content-Type":"application/json",...r&&{Authorization:`Bearer ${r}`},...t.headers},...t};console.log("Making API request to:",`${s}${e}`),console.log("Request config:",a);let o=await fetch(`${s}${e}`,a);if(console.log("Response status:",o.status),console.log("Response ok:",o.ok),!o.ok){let e=await o.json().catch(()=>({}));throw console.error("Error response data:",e),Error(e.error||`HTTP error! status: ${o.status}`)}let n=await o.json();return console.log("Response data:",n),n}catch(e){if(console.error("API Request Error:",e),console.error("Error details:",{message:e.message,name:e.name,stack:e.stack}),"TypeError"===e.name&&e.message.includes("Failed to fetch"))throw Error("Network error: Unable to connect to server. Please check if the backend is running.");throw e}},o={login:async(e,t)=>{let r=await a("/public/login",{method:"POST",body:JSON.stringify({username:e,password:t})});return r.success&&r.data&&r.data.token&&localStorage.setItem("authToken",r.data.token),r},register:async e=>await a("/public/register",{method:"POST",body:JSON.stringify(e)}),getProfile:async()=>await a("/protected/user/profile"),updateProfile:async e=>await a("/protected/user/profile",{method:"PUT",body:JSON.stringify(e)}),logout:()=>{localStorage.removeItem("authToken")}},n={uploadFile:async e=>{let t=new FormData;t.append("file",e);let r=localStorage.getItem("authToken"),a=await fetch(`${s}/protected/uploads/file`,{method:"POST",mode:"cors",credentials:"include",headers:{Authorization:`Bearer ${r}`},body:t});if(!a.ok){let e=await a.text();throw Error(`Upload failed: ${e}`)}return await a.json()},getFile:async e=>await a(`/protected/uploads/file/${e}`),createPostWorkSubmission:async e=>await a("/protected/submissions/postwork",{method:"POST",body:JSON.stringify(e)}),getPostWorkSubmissions:async(e=null)=>{let t=e?`/protected/submissions/postwork?courseId=${e}`:"/protected/submissions/postwork";return await a(t)},createFinalProjectSubmission:async e=>await a("/protected/submissions/finalproject",{method:"POST",body:JSON.stringify(e)}),getFinalProjectSubmission:async e=>await a(`/protected/submissions/finalproject/${e}`)},i={getAllCourses:async()=>await a("/public/courses"),getCourseById:async e=>await a(`/public/courses/${e}`),searchCourses:async e=>await a(`/public/courses/search?q=${encodeURIComponent(e)}`),getCoursesWithEnrollment:async()=>await a("/protected/courses"),enrollInCourse:async e=>{try{return await a("/protected/courses/enroll",{method:"POST",body:JSON.stringify({courseId:parseInt(e)})})}catch(e){if(e.message&&e.message.includes("Already enrolled"))return{success:!0,message:"Already enrolled"};throw e}},getUserEnrollments:async()=>await a("/protected/courses/enrollments"),getCoursePreTest:async e=>await a(`/protected/courses/${e}/pretest`),getCoursePostTest:async e=>await a(`/protected/courses/${e}/posttest`),checkStageAccess:async(e,t)=>await a(`/protected/courses/${e}/stages/${t}/access`)},c={getQuiz:async e=>await a(`/protected/quizzes/${e}`),getQuizzesByCourse:async e=>await a(`/protected/courses/${e}/quizzes`),startQuizAttempt:async e=>await a(`/protected/quizzes/${e}/start`,{method:"POST"}),submitQuiz:async e=>await a("/protected/quizzes/submit",{method:"POST",body:JSON.stringify(e)}),getQuizAttempts:async e=>await a(`/protected/quizzes/${e}/attempts`)},d={isAuthenticated:()=>!!localStorage.getItem("authToken"),getToken:()=>localStorage.getItem("authToken"),clearAuthData:()=>{localStorage.removeItem("authToken"),localStorage.removeItem("currentUser")},testConnection:async()=>{try{return(await fetch(`${s}/health`)).ok}catch(e){return console.error("Backend connectivity test failed:",e),!1}}},l={requestCertificate:async e=>await a(`/protected/courses/${e}/certificate`,{method:"POST"}),getUserCertificates:async()=>await a("/protected/user/certificates"),verifyCertificate:async e=>await a(`/public/certificates/verify/${e}`)},u={getAllCourses:async()=>await a("/protected/admin/courses"),createCourse:async e=>await a("/protected/admin/courses",{method:"POST",body:JSON.stringify(e)}),updateCourse:async(e,t)=>await a(`/protected/admin/courses/${e}`,{method:"PUT",body:JSON.stringify(t)}),deleteCourse:async e=>await a(`/protected/admin/courses/${e}`,{method:"DELETE"}),createGrade:async e=>await a("/protected/admin/grading",{method:"POST",body:JSON.stringify(e)}),getGrades:async()=>await a("/protected/admin/grading"),getCourseSubmissions:async e=>await a(`/protected/admin/courses/${e}/submissions`),getAllCertificates:async()=>await a("/protected/admin/certificates"),getPendingCertificates:async()=>await a("/protected/admin/certificates/pending"),approveCertificate:async e=>await a(`/protected/admin/certificates/${e}/approve`,{method:"POST"}),rejectCertificate:async(e,t)=>await a(`/protected/admin/certificates/${e}/reject`,{method:"POST",body:JSON.stringify({reason:t})}),getAllUsers:async()=>await a("/protected/admin/users"),createUser:async e=>await a("/protected/admin/users",{method:"POST",body:JSON.stringify(e)}),updateUser:async(e,t)=>await a(`/protected/admin/users/${e}`,{method:"PUT",body:JSON.stringify(t)}),deleteUser:async e=>await a(`/protected/admin/users/${e}`,{method:"DELETE"}),createAnnouncement:async e=>await a("/protected/admin/announcements",{method:"POST",body:JSON.stringify(e)}),getAllAnnouncements:async()=>await a("/protected/admin/announcements"),getAnnouncementById:async e=>await a(`/protected/admin/announcements/${e}`),getCoursePreTestAdmin:async e=>await a(`/protected/admin/courses/${e}/pretest`),getCoursePostTestAdmin:async e=>await a(`/protected/admin/courses/${e}/posttest`),createQuiz:async e=>await a("/protected/admin/quizzes",{method:"POST",body:JSON.stringify(e)}),updateQuiz:async(e,t)=>await a(`/protected/admin/quizzes/${e}`,{method:"PUT",body:JSON.stringify(t)}),deleteQuiz:async e=>await a(`/protected/admin/quizzes/${e}`,{method:"DELETE"}),getAllQuizzes:async()=>await a("/protected/admin/quizzes"),updateAnnouncement:async(e,t)=>await a(`/protected/admin/announcements/${e}`,{method:"PUT",body:JSON.stringify(t)}),deleteAnnouncement:async e=>await a(`/protected/admin/announcements/${e}`,{method:"DELETE"}),getDashboardStats:async()=>await a("/protected/admin/dashboard/stats"),getTestResults:async()=>await a("/protected/admin/test-results"),getStageLocks:async e=>await a(`/protected/admin/courses/${e}/stage-locks`),updateStageLock:async(e,t)=>await a(`/protected/admin/courses/${e}/stage-locks`,{method:"PUT",body:JSON.stringify(t)})},y={submitSurveyFeedback:async e=>await a("/protected/surveys/feedback",{method:"POST",body:JSON.stringify(e)}),getSurveyFeedback:async e=>await a(`/protected/surveys/feedback/${e}`)},m=y.submitSurveyFeedback,g={syncProgress:async e=>await a("/protected/progress/sync",{method:"POST",body:JSON.stringify(e)}),getCourseProgress:async e=>await a(`/protected/courses/${e}/progress`),updateLessonProgress:async e=>await a("/protected/progress/lesson",{method:"POST",body:JSON.stringify(e)}),getLessonProgress:async(e,t)=>await a(`/protected/courses/${e}/lessons/${t}/progress`),getUserProgressList:async()=>await a("/protected/progress")},p=g.syncProgress,h=g.getCourseProgress;g.updateLessonProgress,g.getLessonProgress,g.getUserProgressList;let w=i.getUserEnrollments,f=l.getUserCertificates,b=l.requestCertificate,P={auth:o,course:i,submission:n,quiz:c,certificate:l,admin:u,announcement:{getUserAnnouncements:async()=>await a("/protected/announcements")},survey:y,progress:g,utils:d}},19610:(e,t,r)=>{Promise.resolve().then(r.bind(r,69541))},44811:(e,t,r)=>{"use strict";r.d(t,{AuthProvider:()=>a});var s=r(12907);(0,s.registerClientReference)(function(){throw Error("Attempted to call useAuth() from the server but useAuth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/Users/tjphack/new/lms/agileku/src/contexts/AuthContext.js","useAuth");let a=(0,s.registerClientReference)(function(){throw Error("Attempted to call AuthProvider() from the server but AuthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/Users/tjphack/new/lms/agileku/src/contexts/AuthContext.js","AuthProvider")},51268:(e,t,r)=>{Promise.resolve().then(r.t.bind(r,86346,23)),Promise.resolve().then(r.t.bind(r,27924,23)),Promise.resolve().then(r.t.bind(r,35656,23)),Promise.resolve().then(r.t.bind(r,40099,23)),Promise.resolve().then(r.t.bind(r,38243,23)),Promise.resolve().then(r.t.bind(r,28827,23)),Promise.resolve().then(r.t.bind(r,62763,23)),Promise.resolve().then(r.t.bind(r,97173,23))},61135:()=>{},69541:(e,t,r)=>{"use strict";r.d(t,{A:()=>i,AuthProvider:()=>d});var s=r(60687),a=r(43210),o=r(12744);let n=(0,a.createContext)(),i=()=>{let e=(0,a.useContext)(n);if(!e)throw Error("useAuth must be used within an AuthProvider");return e},c=e=>(console.error("API Error:",e),{success:!1,error:e.message||"Terjadi kesalahan pada server"}),d=({children:e})=>{let[t,i]=(0,a.useState)(null),[d,l]=(0,a.useState)(!0),[u,y]=(0,a.useState)([]),[m,g]=(0,a.useState)([]),p=(0,a.useCallback)(async()=>{try{let e=await o.GS.getAllCourses();console.log("Courses data received:",e),y(e.data||e.courses||[])}catch(e){console.error("Failed to refresh courses:",e)}},[]),h=(0,a.useCallback)(async e=>{try{let t=await o.GS.getCourseById(e);if(t&&t.success&&t.data)return t.data;if(t&&t.course)return t.course;if(t&&(t.id||t.title))return t;return console.warn("Unexpected course response format:",t),null}catch(e){return console.error("Failed to get course by ID:",e),null}},[]);(0,a.useEffect)(()=>{(async()=>{try{if(o.apiUtils.isAuthenticated())try{let e=await o.R2.getProfile(),t=e.data||e.user||e;i(t),await p();let r=await (0,o.dg)(),s=[];r&&r.data&&Array.isArray(r.data)?s=r.data:r&&Array.isArray(r)&&(s=r),g(s)}catch(e){console.error("Failed to load user profile:",e),o.apiUtils.clearAuthData(),i(null),g([])}else i(null),g([]);await p()}catch(e){console.error("Failed to initialize app:",e)}finally{l(!1)}})()},[p]);let w=async(e,t)=>{try{let r=await o.R2.login(e,t);if(r&&r.success&&r.data&&r.data.user&&r.data.token){i(r.data.user),localStorage.setItem("currentUser",JSON.stringify(r.data.user));try{let e=await (0,o.dg)(),t=[];e&&e.data&&Array.isArray(e.data)?t=e.data:e&&Array.isArray(e)&&(t=e),g(t)}catch(e){console.error("Failed to load enrollments:",e),g([])}return{success:!0,user:r.data.user}}return{success:!1,error:"Login gagal"}}catch(e){return c(e)}},f=async e=>{if(!t)return{success:!1,error:"User not logged in"};if(P(e))return{success:!0,message:"Already enrolled"};try{let t=await o.GS.enrollInCourse(e),r=await (0,o.dg)(),s=[];return r&&r.data&&Array.isArray(r.data)?s=r.data:r&&Array.isArray(r)&&(s=r),g(s),{success:!0,data:t}}catch(e){if(console.error("Enrollment error:",e),e.message&&e.message.includes("Already enrolled")){let e=await (0,o.dg)(),t=[];return e&&e.data&&Array.isArray(e.data)?t=e.data:e&&Array.isArray(e)&&(t=e),g(t),{success:!0,message:"Already enrolled"}}return{success:!1,error:e.message}}},b=async e=>{try{let t=await o.GS.searchCourses(e);return t.data||t.courses||[]}catch(t){return console.error("Failed to search courses:",t),u.filter(t=>t.title.toLowerCase().includes(e.toLowerCase())||t.description.toLowerCase().includes(e.toLowerCase()))}},P=e=>!!Array.isArray(m)&&m.some(t=>t.id===parseInt(e)||t.course_id===parseInt(e)),A=async e=>{if(!Array.isArray(m))return 0;let t=m.find(t=>t.id===parseInt(e)||t.course_id===parseInt(e));if(!t)return 0;try{let t=await (0,o.Hb)(e);if(t&&t.data)return t.data.overallProgress||0}catch(e){console.warn("Failed to get real-time progress, using cached:",e)}return t.progress||0},S=(0,a.useCallback)(async()=>{if(t)try{let e=await (0,o.dg)(),t=[];e&&e.data&&Array.isArray(e.data)?t=e.data:e&&Array.isArray(e)&&(t=e),g(t)}catch(e){console.error("Failed to refresh user progress:",e)}},[t]),k=async e=>{try{if(t&&"admin"===t.role){let{adminAPI:t}=await Promise.resolve().then(r.bind(r,12744)),s=await t.getCoursePreTestAdmin(e);return s.data||s}{P(e)||(console.log("User not enrolled in course, attempting auto-enrollment..."),await f(e));let t=await o.GS.getCoursePreTest(e);return t.quiz||t}}catch(s){if(console.error("Failed to get pre-test:",s),t&&"admin"!==t.role)try{let{adminAPI:t}=await Promise.resolve().then(r.bind(r,12744)),s=await t.getCoursePreTestAdmin(e);return s.data||s}catch(e){console.error("Admin fallback also failed:",e)}return null}},v=async e=>{try{if(t&&"admin"===t.role){let{adminAPI:t}=await Promise.resolve().then(r.bind(r,12744)),s=await t.getCoursePostTestAdmin(e);return s.data||s}{P(e)||(console.log("User not enrolled in course, attempting auto-enrollment..."),await f(e));let t=await o.GS.getCoursePostTest(e);return t.quiz||t}}catch(s){if(console.error("Failed to get post-test:",s),t&&"admin"!==t.role)try{let{adminAPI:t}=await Promise.resolve().then(r.bind(r,12744)),s=await t.getCoursePostTestAdmin(e);return s.data||s}catch(e){console.error("Admin fallback also failed:",e)}return null}},T=async(e,s)=>{try{if(y(t=>t.map(t=>t.id===e?{...t,...s}:t)),t&&"admin"===t.role){let{adminAPI:t}=await Promise.resolve().then(r.bind(r,12744));await t.updateCourse(e,s)}return{success:!0}}catch(e){return console.error("Failed to update course:",e),await p(),{success:!1,error:e.message}}},C=async e=>{try{if(!t||"admin"!==t.role)throw Error("Only admin can access stage locks");let r=localStorage.getItem("authToken");if(!r)throw Error("No authentication token found");let s=await fetch(`https://8080-firebase-agileku-1751862903205.cluster-ejd22kqny5htuv5dfowoyipt52.cloudworkstations.dev/api/protected/admin/courses/${e}/stage-locks`,{method:"GET",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!s.ok)throw Error(`HTTP ${s.status}: ${s.statusText}`);let a=s.headers.get("content-type");if(!a||!a.includes("application/json")){let e=await s.text();throw console.error("Non-JSON response:",e),Error("Server returned non-JSON response")}let o=await s.json();if(o.success)return{success:!0,data:o.data};throw Error(o.message||"Failed to fetch stage locks")}catch(e){return console.error("Error fetching stage locks:",e),{success:!1,error:e.message}}},$=async(e,r,s,a="")=>{try{if(!t||"admin"!==t.role)throw Error("Only admin can update stage locks");let o=localStorage.getItem("authToken");if(!o)throw Error("No authentication token found");let n={courseId:parseInt(e),stageName:r,isLocked:s,lockMessage:a},i=await fetch(`https://8080-firebase-agileku-1751862903205.cluster-ejd22kqny5htuv5dfowoyipt52.cloudworkstations.dev/api/protected/admin/courses/${e}/stage-locks`,{method:"PUT",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(!i.ok)throw Error(`HTTP ${i.status}: ${i.statusText}`);let c=i.headers.get("content-type");if(!c||!c.includes("application/json")){let e=await i.text();throw console.error("Non-JSON response:",e),Error("Server returned non-JSON response")}let d=await i.json();if(d.success)return{success:!0,data:d.data};throw Error(d.message||"Failed to update stage lock")}catch(e){return console.error("Error updating stage lock:",e),{success:!1,error:e.message}}};return(0,s.jsx)(n.Provider,{value:{currentUser:t,login:w,logout:()=>{o.R2.logout(),i(null),g([]),localStorage.removeItem("currentUser")},isLoading:d,courses:u,enrollments:m,refreshCourses:p,getCourseById:h,enrollInCourse:f,searchCourses:b,isEnrolledInCourse:P,getUserProgress:A,getUserProgressSync:e=>{if(!Array.isArray(m))return 0;let t=m.find(t=>t.id===parseInt(e)||t.course_id===parseInt(e));return t&&t.progress||0},refreshUserProgress:S,getCoursePreTest:k,getCoursePostTest:v,updateCourse:T,getStageLocks:C,updateStageLock:$},children:e})}},75535:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>l,metadata:()=>d});var s=r(37413),a=r(56922),o=r.n(a),n=r(1980),i=r.n(n);r(61135);var c=r(44811);let d={title:"Create Next App",description:"Generated by create next app"};function l({children:e}){return(0,s.jsx)("html",{lang:"en",children:(0,s.jsx)("body",{className:`${o().variable} ${i().variable} antialiased`,children:(0,s.jsx)(c.AuthProvider,{children:e})})})}},96050:(e,t,r)=>{Promise.resolve().then(r.bind(r,44811))},98116:(e,t,r)=>{Promise.resolve().then(r.t.bind(r,16444,23)),Promise.resolve().then(r.t.bind(r,16042,23)),Promise.resolve().then(r.t.bind(r,88170,23)),Promise.resolve().then(r.t.bind(r,49477,23)),Promise.resolve().then(r.t.bind(r,29345,23)),Promise.resolve().then(r.t.bind(r,12089,23)),Promise.resolve().then(r.t.bind(r,46577,23)),Promise.resolve().then(r.t.bind(r,31307,23))}};