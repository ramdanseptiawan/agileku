version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lms_postgres
    environment:
      POSTGRES_DB: lms
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d lms"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Go Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: test
      DB_PASSWORD: test
      DB_NAME: lms
      DB_SSLMODE: disable
      JWT_SECRET: your-secret-key-change-this-in-production
      PORT: 8080
    volumes:
      - ./uploads:/root/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lms_network
    restart: unless-stopped

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lms_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@lms.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - lms_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  lms_network:
    driver: bridge